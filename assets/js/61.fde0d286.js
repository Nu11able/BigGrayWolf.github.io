(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{490:function(t,a,r){"use strict";r.r(a);var s=r(2),v=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"faq"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#faq"}},[t._v("#")]),t._v(" FAQ")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Q:用户模式和内核模式有什么区别")])]),t._v(" "),a("li",[a("p",[t._v("A:虚拟地址在用户模式时映射到用户程序的内存区域，在内核模式时则映射到内核程序的内存区域。内存映射的切换有MMU来实现")])]),t._v(" "),a("li",[a("p",[t._v("Q:系统调用到底是什么")])]),t._v(" "),a("li",[a("p",[t._v("A:用户程序由用户进程处理，无法访问加载内核程序的区域，也就无法执行由内核实现的功能。为了访问内核功能，用户程序必须通过系统调用向内核提出访问内核功能的请求")])]),t._v(" "),a("li",[a("p",[t._v("Q:父进程为什么一定要得到子进程的处理结果才能够将子进程清理掉")])]),t._v(" "),a("li",[a("p",[t._v("Q:PPDA(per process data area)和APR(active page register)到底是什么")])])]),t._v(" "),a("h1",{attrs:{id:"第二章-进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二章-进程"}},[t._v("#")]),t._v(" 第二章 进程")]),t._v(" "),a("ul",[a("li",[t._v("内核程序在系统启动时被读取到内存中")])]),t._v(" "),a("h1",{attrs:{id:"第三章-进程的管理1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三章-进程的管理1"}},[t._v("#")]),t._v(" 第三章 进程的管理1")]),t._v(" "),a("ul",[a("li",[t._v("父进程在子进程结束时取其结束状态并释放进程资源")]),t._v(" "),a("li",[t._v("子进程与父进程共享代码段(如果子进程执行了其他程序，那么这种关系将被打破)但有自己的数据段(写时复制技术)。")]),t._v(" "),a("li")])])}),[],!1,null,null,null);a.default=v.exports}}]);